"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e,t){switch(!0){case"function"==typeof define&&e.define===define&&!!define.amd:define(t);break;case"object"===("undefined"==typeof module?"undefined":_typeof(module))&&e===module.exports:module.exports=t();break;case!e.MultiSet:Object.defineProperty(e,"MultiSet",{value:t(),enumerable:!0});break;default:console.error("'MultiSet' is already defined on root object")}}(void 0,function(){function e(e){this.init(e)}function t(e,t){var n=function(n){if(!t.hasOwnProperty(n))return"continue";var r=Object.getOwnPropertyDescriptor(t,n),o=(r.value||r.get||r.set).toString().match(/@aliases:(.*?);/),i=o?o[1].match(/[\w\$]+/g):[];i.unshift(n),i.forEach(function(t){return Object.defineProperty(e,t,r)})};for(var r in t){n(r)}return e}return t(e.prototype,{$info:{name:"cell-multiset",description:"Fast JS MultiSet implementation.",version:"0.0.0",url:"https://github.com/unnoon/cell-multiset"},$create:function(t){"@aliases: $spawn";return Object.create(e.prototype).init(t)},add:function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var r,o=0,i=t.length;o<i;o++)r=t[o],this.elements.set(r,(this.elements.get(r)||0)+1|0);return this},get cardinality(){"@aliases: size";var e=0;return this.elements.forEach(function(t){return e+=t}),e},set cardinality(e){console.warn("Cardinality/Size property is readonly.")},clear:function(){return this.elements.forEach(function(e,t,n){n.set(t,0)}),this},init:function(e){if(this.elements=new Map,e){var t=!0,n=!1,r=void 0;try{for(var o,i=e[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value;this.add(a)}}catch(e){n=!0,r=e}finally{try{!t&&i.return&&i.return()}finally{if(n)throw r}}}return this},has:function(e){"@aliases: isMember";return!!this.elements.get(e)},remove:function(){"@aliases: delete";for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var r,o=0,i=t.length;o<i;o++)r=t[o],this.elements.set(r,Math.max(0,this.elements.get(r)-1|0));return this}}),e.prototype});