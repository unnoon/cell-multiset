"use strict";function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _slicedToArray=function(){function e(e,t){var r=[],n=!0,i=!1,o=void 0;try{for(var a,u=e[Symbol.iterator]();!(n=(a=u.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){i=!0,o=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw o}}return r}return function(t,r){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,r);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};!function(e,t){switch(!0){case"function"==typeof define&&e.define===define&&!!define.amd:define(t);break;case"object"===("undefined"==typeof module?"undefined":_typeof(module))&&e===module.exports:module.exports=t();break;case!e.MultiSet:Object.defineProperty(e,"MultiSet",{value:t(),enumerable:!0});break;default:console.error("'MultiSet' is already defined on root object")}}(void 0,function(){function e(){var e=arguments.length<=0||void 0===arguments[0]?void 0:arguments[0];this.init(e)}function t(e,t){var r=function(r){if(!t.hasOwnProperty(r))return"continue";var i=Object.getOwnPropertyDescriptor(t,r),o=r.match(/[\w\$\@]+/g);r=o[o.length-1],o.pop();var a=(i.value||i.get||i.set).toString().match(/@aliases:(.*?);/),u=a?a[1].match(/[\w\$]+/g):[];u.unshift(r);var l=r.match(/@@(.+)/);l=l?l[1]:"";var s=function(e,t){l?e[Symbol[l]]=i.value:Reflect.defineProperty(e,t,i)};u.forEach(function(t){~o.indexOf("static")&&s(e,t),s(e.prototype,t)}),n=r};for(var n in t){r(n)}return e}var r,n=0,i=1,o=(r={"static info":{name:"cell-multiset",description:"Fast JS MultiSet implementation.",version:"0.0.0",url:"https://github.com/unnoon/cell-multiset"},"static create":function(){"@aliases: spawn";var t=arguments.length<=0||void 0===arguments[0]?void 0:arguments[0];return Object.create(e.prototype).init(t)},add:function(){for(var e,t=arguments.length,r=n;r<t;r++)e=arguments.length<=r+0?void 0:arguments[r+0],this.elements.set(e,(this.elements.get(e)||n)+i);return this},alphabet:function(){"@aliases: underlyingElements";var e=this,t=function(){var t=[];return e.forEach(function(e){return t.push(e)}),{v:t}}();if("object"===("undefined"==typeof t?"undefined":_typeof(t)))return t.v},get cardinality(){"@aliases: size";var e=n;return this.elements.forEach(function(t){return e+=t}),e},set cardinality(e){console.warn(".cardinality/.size property is readonly.")},clear:function(){return this.elements.clear(),this},each:function(e){"@aliases: forEach";var t=arguments.length<=1||void 0===arguments[1]?null:arguments[1],r=!0,n=!1,i=void 0;try{for(var o,a=this.elements[Symbol.iterator]();!(r=(o=a.next()).done);r=!0){var u=_slicedToArray(o.value,2),l=u[0],s=u[1];if(e.call(t,l,s,this)===!1)return!1}}catch(e){n=!0,i=e}finally{try{!r&&a.return&&a.return()}finally{if(n)throw i}}return!0},each$:function(e){"@aliases: forEach$, eachAll, forEachAll";var t=arguments.length<=1||void 0===arguments[1]?null:arguments[1],r=0,n=!0,i=!1,o=void 0;try{for(var a,u=this.elements[Symbol.iterator]();!(n=(a=u.next()).done);n=!0)for(var l=_slicedToArray(a.value,2),s=l[0],c=l[1],f=0;f<c;f++,r++)if(e.call(t,s,r,this)===!1)return!1}catch(e){i=!0,o=e}finally{try{!n&&u.return&&u.return()}finally{if(i)throw o}}return!0},entries:function(){return this.elements.entries()},get:function(e){"@aliases: multiplicityOf";return this.elements.get(e)},init:function(){var e=arguments.length<=0||void 0===arguments[0]?void 0:arguments[0];if(this.elements=new Map,e){var t=!0,r=!1,n=void 0;try{for(var i,o=e[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var a=i.value;this.add(a)}}catch(e){r=!0,n=e}finally{try{!t&&o.return&&o.return()}finally{if(r)throw n}}}return this},has:function(e){"@aliases: isMember";return!!this.elements.get(e)},keys:function(){return this.elements.keys()},remove:function(){"@aliases: delete";for(var e,t,r=arguments.length,i=n;i<r;i++)e=arguments.length<=i+0?void 0:arguments[i+0],t=this.elements.get(e),1===t?this.elements.delete(e):this.elements.set(e,Math.max(n,--t));return this},toString:function(e){"@aliases: stringify";var t="";switch(e){case-1:t+="({"+(this.alphabet()+"").replace(/,/g,", ")+"}, {",this.each(function(e,r){return t+=("{"!==t[t.length-1]?", ":"")+"("+e+", "+r+")"}),t+="})";break;case 1:t+="[",this.each$(function(e){return t+=""+("["!==t?", ":"")+e}),t+="]";break;default:t+="{",this.each(function(e,r){return t+=""+("{"!==t?", ":"")+e+" => "+r}),t+="}"}return t},values:function(){var e=[];return this.each$(function(t){return e.push(t)}),regeneratorRuntime.mark(function e(t){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(t,"t0",1);case 1:case"end":return e.stop()}},e,this)})(e)}},_defineProperty(r,"@@iterator",function(){return this.elements.entries()}),_defineProperty(r,"@@toStringTag","MultiSet"),_defineProperty(r,"static @@species",e),r);return t(e,o),e.prototype});